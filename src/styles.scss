// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$light-primary: mat.define-palette(mat.$indigo-palette);
$light-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$light-warn: mat.define-palette(mat.$red-palette);

$list: mat.define-palette(mat.$green-palette),
  mat.define-palette(mat.$cyan-palette), mat.define-palette(mat.$amber-palette),
  mat.define-palette(mat.$lime-palette), mat.define-palette(mat.$grey-palette),
  mat.define-palette(mat.$orange-palette), mat.define-palette(mat.$teal-palette),
  mat.define-palette(mat.$brown-palette),
  mat.define-palette(mat.$indigo-palette), mat.define-palette(mat.$pink-palette);

$random-palette-1: nth($list, random(10));
$random-palette-2: nth($list, random(10));

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$light-theme: mat.define-light-theme(
  (
    color: (
      primary: $light-primary,
      accent: $light-accent,
      warn: $light-warn,
    ),
    // Only include `typography` and `density` in the default theme.
    typography: mat.define-typography-config(),
    density: 0,
  )
);

// Define a dark theme
$dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: mat.define-palette(mat.$green-palette),
      accent: mat.define-palette(mat.$amber-palette),
    ),
  )
);

mat.$theme-ignore-duplication-warnings: true;

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($light-theme);

.light-theme.small-density {
  $light-dense-theme: mat.define-light-theme(
    (
      color: (
        primary: $light-primary,
        accent: $light-accent,
        warn: $light-warn,
      ),
      // Only include `typography` and `density` in the default theme.
      density: -3,
    )
  );
  @include mat.all-component-themes($light-dense-theme);
}

.dark-theme {
  @include mat.all-component-themes($dark-theme);

  &.small-density {
    $dark-dense-theme: mat.define-dark-theme(
      (
        color: (
          primary: mat.define-palette(mat.$green-palette),
          accent: mat.define-palette(mat.$amber-palette),
        ),
        density: -3,
      )
    );
    @include mat.all-component-themes($dark-dense-theme);
  }
}

.surprise-me-theme {
  // Define a dark theme
  $random-theme: mat.define-dark-theme(
    (
      color: (
        primary: $random-palette-1,
        accent: $random-palette-2,
      ),
    )
  );

  @include mat.all-component-themes($random-theme);

  &.small-density {
    $random-dense-theme: mat.define-dark-theme(
      (
        color: (
          primary: $random-palette-1,
          accent: $random-palette-2,
        ),
        density: -3,
      )
    );
    @include mat.all-component-themes($random-dense-theme);
  }
}

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}
